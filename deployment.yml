apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-librairies
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-librairies
  template:
    metadata:
      labels:
        app: my-librairies
    spec:
      containers:
        - name: my-librairies
          image: mylibrairies
          ports:
            - containerPort: 8080
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: my-librairies
  labels:
    app: my-librairies
spec:
  type: NodePort
  ports:
    - port: 8080
  selector:
    app: my-librairies
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
  name: mylibrairies
  namespace: dev
spec:
  rules:
    - host: mylibrairies.sitcluster.eu-de.containers.appdomain.cloud
      http:
        paths:
          - path: /
            backend:
              serviceName: my-librairies
              servicePort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-librairies-cfg
data:
  mylibrairies.ref.val: Hooooo
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: dev
  name: namespace-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["configmaps", "pods", "services", "endpoints", "secrets"]
    verbs: ["get", "list", "watch"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: namespace-reader-binding
  namespace: dev
subjects:
  - kind: ServiceAccount
    name: default
    apiGroup: ""
roleRef:
  kind: Role
  name: namespace-reader
  apiGroup: ""